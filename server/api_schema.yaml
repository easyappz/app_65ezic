openapi: 3.0.0
info:
  title: Photo Rating App API
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error
  /api/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid credentials
        '500':
          description: Server error
  /api/reset-password-request:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset link sent
        '404':
          description: User not found
        '500':
          description: Server error
  /api/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '404':
          description: User not found
        '500':
          description: Server error
  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  points:
                    type: number
  /api/photos:
    post:
      summary: Upload a new photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                imageUrl:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: number
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  imageUrl:
                    type: string
                  status:
                    type: string
  /api/ratings:
    post:
      summary: Rate a photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                raterId:
                  type: string
                score:
                  type: number
                  minimum: 1
                  maximum: 10
      responses:
        '201':
          description: Rating submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  score:
                    type: number